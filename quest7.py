def maxUsers(arr, ogr):
    arr.sort()   # сортируем массив, чтобы взять максимальное количество минимальных чисел из его начала
    s = 0
    for i in range(len(arr)):
        s += arr[i]
        if s > ogr:   # если сумма превышает ограничитель (объем хранилища), то выводим максимум
            return i


def maxV(arr, cnt, ogr):
    s = 0
    for i in range(cnt - 1):   # берем (максимальное количество пользователей-1) из начала
                                # сортированного массива и считаем их сумму
        s += arr[i]
    for i in range(len(arr) - 1, cnt - 1, -1):    # затем идем с конца (где числа больше) и ищем такое первое попавшееся число
        if s + arr[i] < ogr:                      # чтобы сумма с ним была меньше ограничителя
                                                  # так как мы шли с конца отсорт. масс., то это число будет максимальным,
                                                  # как и количество пользователей (cnt - 1 + 1 == cnt)
            return arr[i]


def main():
    ogr, n = map(int, input().split())  # вводим 2 числа через пробел (ограничитель и кол-во файлов)
    arr = []
    for i in range(n):
        arr += [int(input())]           # вводим массив объемов файлов

    mu = maxUsers(arr, ogr)
    print(mu)
    print(maxV(arr, mu, ogr))           # используем значение, полученное в предыдущей функции,
                                        # чтобы не считать несколько раз одно и то же


if __name__ == '__main__':
    main()
